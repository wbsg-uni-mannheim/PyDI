[project]
name = "PyDI"
version = "0.1.0"
description = "Python Data Integration Framework"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
  { name = "Ralph Peeters", email = "ralph.peeters@gmx.de" },
  { name = "Aaron Steiner", email = "aaron.steiner@uni-mannheim.de" }
]
keywords = ["data-integration", "entity-matching", "schema-matching", "data-fusion"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "pandas>=2.0.0,<3.0.0",
  "numpy>=1.24.0,<2.0.0",
  "scikit-learn>=1.3.0,<2.0.0",
  "networkx>=3.0,<4.0",
  "rapidfuzz>=3.0.0,<4.0.0",
  "textdistance[extras]>=4.5.0,<5.0.0",
  "sentence-transformers>=2.2.0,<3.0.0",
  "pydantic>=2.0.0,<3.0.0",
  "ydata-profiling>=4.0.0,<5.0.0",
  "sweetviz>=2.3.0,<3.0.0",
  "transformers>=4.30.0,<5.0.0",
]

[project.urls]
"Homepage" = "https://example.com/pydi"
"Repository" = "https://example.com/pydi/repo"

[project.optional-dependencies]
dev = [
  "pytest>=7.0,<8.0",
  "pytest-cov>=4.0.0,<5.0.0",
  "black>=23.0,<24.0",
  "isort>=5.12.0,<6.0.0",
  "flake8>=6.0.0,<7.0.0",
  "mypy>=1.5.0,<2.0.0",
  "pre-commit>=3.0.0,<4.0.0",
]
docs = [
  "sphinx>=7.0.0,<8.0.0",
  "sphinx-rtd-theme>=1.3.0,<2.0.0",
  "myst-parser>=2.0.0,<3.0.0",
]
test = [
  "pytest>=7.0,<8.0",
  "pytest-cov>=4.0.0,<5.0.0",
  "pytest-mock>=3.11.0,<4.0.0",
]

[build-system]
requires = ["setuptools>=63", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["PyDI*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["PyDI"]

[tool.pytest.ini_options]
testpaths = ["PyDI/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["PyDI"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]